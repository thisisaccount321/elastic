---
- name: Setup Docker Swarm Cluster
  hosts: manager
  become: true
  tasks:
    - name: Install Python pip
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Initialize Docker Swarm
      community.docker.docker_swarm:
        state: present
        advertise_addr: "{{ ansible_host }}"
      register: swarm_init

    - name: Get Swarm Join Token
      command: docker swarm join-token worker -q
      register: join_token_info

    - name: Set Join Token Fact
      set_fact:
        join_token: "{{ join_token_info.stdout }}"

    - name: Create directory for Docker Compose files
      file:
        path: /opt/docker-compose
        state: directory
        owner: root
        group: docker
        mode: '0755'

    - name: Copy docker-compose.yml file
      copy:
        src: ./docker-compose/docker-compose.yml
        dest: /opt/docker-compose/docker-compose.yml
        owner: root
        group: docker
        mode: '0644'

    - name: Copy env.sh file for Docker Compose
      copy:
        src: ./docker-compose/env.sh
        dest: /opt/docker-compose/env.sh
        owner: root
        group: docker
        mode: '0644'

    - name: Run Docker Compose Up
      command: bash -c "source /opt/docker-compose/env.sh && docker-compose up -d"
      args:
        chdir: /opt/docker-compose

- name: Join Swarm Workers
  hosts: worker
  become: true
  tasks:
    - name: Install Python pip
      apt:
        name: python3-pip
        state: present
        update_cache: yes

    - name: Install Docker SDK for Python
      pip:
        name: docker
        state: present

    - name: Start Docker
      service:
        name: docker
        state: started
        enabled: yes

    - name: Debug advertise_addr
      debug:
        msg: "Advertise Address (ansible_host): {{ ansible_host }}"

    - name: Debug join_token
      debug:
        msg: "Join Token: {{ hostvars[groups['manager'][0]].join_token }}"

    - name: Debug remote_addrs (MANAGER_INTERNAL_IP)
      debug:
        msg: "Remote Manager Internal IP: {{ lookup('env', 'MANAGER_INTERNAL_IP') }}"

    - name: Join Docker Swarm
      community.docker.docker_swarm:
        state: join
        advertise_addr: "{{ ansible_host }}"
        join_token: "{{ hostvars[groups['manager'][0]].join_token }}"
        remote_addrs: "{{ lookup('env', 'MANAGER_INTERNAL_IP') }}" 

- name: Check Docker Swarm status
  hosts: manager
  become: true
  tasks:
    - name: Check Docker Swarm nodes
      command: docker node ls
      register: swarm_status
    - name: Output Docker Swarm nodes status
      debug:
        msg: "{{ swarm_status.stdout }}"